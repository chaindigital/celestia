#!/bin/bash

# === –í–≤–æ–¥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö ===
read -p "–í–≤–µ–¥–∏—Ç–µ IP —Ç—Ä–µ—Ç—å–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞ (REMOTE_IP): " REMOTE_IP
read -s -p "–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è bridge –Ω–∞ —Ç—Ä–µ—Ç—å–µ–º —Å–µ—Ä–≤–µ—Ä–µ (REMOTE_PASS): " REMOTE_PASS
echo

# === –≠–∫—Å–ø–æ—Ä—Ç –≤–æ –≤—Ä–µ–º–µ–Ω–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ ===
export REMOTE_IP=$REMOTE_IP
export REMOTE_PASS=$REMOTE_PASS

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π ===
apt update && apt install -y python3 python3-pip python3-venv sshpass curl

# === –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è otel_data (–µ–¥–∏–Ω–∞—è) ===
mkdir -p /root/otel_data
cd /root/otel_data

# === –í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ ===
python3 -m venv .venv
source .venv/bin/activate
pip install requests tqdm

# === Python-—Å–∫—Ä–∏–ø—Ç ===
cat > /root/otel_data/fetch_otel_metrics.py << 'EOF'
#!/usr/bin/env python3
import requests, os, subprocess
from datetime import datetime, timezone

ENDPOINTS = {
    "testnet": "https://fdp-mocha.celestia.observer/metrics",
    "mainnet": "https://fdp-lunar.celestia.observer/metrics"
}

REMOTE_USER = "bridge"
REMOTE_IP = os.environ.get("REMOTE_IP")
REMOTE_PASS = os.environ.get("REMOTE_PASS")
REMOTE_DIR = "/home/bridge/otel_data/"
SAVE_DIR = "/root/otel_data"

def log(msg):
    now = datetime.now(timezone.utc).strftime("%Y-%m-%d %H:%M:%S UTC")
    print(f"[{now}] {msg}")

def fetch_and_send(network, url):
    try:
        log(f"üîÑ –ü–æ–ª—É—á–µ–Ω–∏–µ OTEL –º–µ—Ç—Ä–∏–∫ –¥–ª—è {network}...")
        resp = requests.get(url, timeout=10)
        if resp.status_code != 200:
            log(f"‚ùå –û—à–∏–±–∫–∞ {resp.status_code} –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ {url}")
            return
        filename = f"otel_metrics_{network}_latest.txt"
        path = os.path.join(SAVE_DIR, filename)
        with open(path, "w") as f:
            f.write(resp.text)
        log(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename}")

        log(f"üì° –û—Ç–ø—Ä–∞–≤–∫–∞ {filename} –Ω–∞ {REMOTE_IP}...")
        scp_cmd = [
            "sshpass", "-p", REMOTE_PASS,
            "scp", "-o", "StrictHostKeyChecking=no",
            "-o", "UserKnownHostsFile=/dev/null",
            path,
            f"{REMOTE_USER}@{REMOTE_IP}:{REMOTE_DIR}"
        ]
        subprocess.run(scp_cmd, check=True)
        log(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: {filename}\\n")
    except Exception as e:
        log(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ {network}: {e}")

def main():
    for net, url in ENDPOINTS.items():
        fetch_and_send(net, url)

if __name__ == "__main__":
    main()
EOF

chmod +x /root/otel_data/fetch_otel_metrics.py

# === –°–∫—Ä–∏–ø—Ç run_otel.sh –¥–ª—è cron —Å –ª–æ–≥–∞–º–∏ ===
cat > /root/otel_data/run_otel.sh << EOF
#!/bin/bash
export REMOTE_IP="$REMOTE_IP"
export REMOTE_PASS="$REMOTE_PASS"
source /root/otel_data/.venv/bin/activate
python3 /root/otel_data/fetch_otel_metrics.py >> /root/otel_data/otel_cron.log 2>&1
EOF

chmod +x /root/otel_data/run_otel.sh

# === –î–æ–±–∞–≤–∏—Ç—å –≤ cron (–∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç) ===
(crontab -l 2>/dev/null | grep -v 'run_otel.sh'; echo "*/5 * * * * /bin/bash /root/otel_data/run_otel.sh") | crontab -

# === –§–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ ===
echo ""
echo "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –ú–µ—Ç—Ä–∏–∫–∏ –±—É–¥—É—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç."
echo "üëâ –î–ª—è –∑–∞–ø—É—Å–∫–∞ –≤—Ä—É—á–Ω—É—é:"
echo "source /root/otel_data/.venv/bin/activate && python3 /root/otel_data/fetch_otel_metrics.py"
echo "üëâ Cron-–ª–æ–≥–∏: /root/otel_data/otel_cron.log"
echo "üëâ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã: /root/otel_data/otel_metrics_testnet_latest.txt –∏ otel_metrics_mainnet_latest.txt"
